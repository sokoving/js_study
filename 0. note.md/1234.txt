# HTML 속성 조작

$elementNode.setAttribute(name, value)	속성, 변경할 값
$elementNode.getAttribute(name)		속성의 값을 반환

$elementNode.hasAttribute(name)		속성 유무 체크(논리)
!$elementNode.hasAttribute(name)		속성이 없으면
  *속성 값을 수정하거나 삭제할 때 있는지 확인한 후 진행하는 버릇을 들이자
$elementNode.removeAttribute(name)		속성 제거

data 속성 > dataset 프로퍼티
HTML 요소와 자바스크립트 간에 데이터 교환


# 스타일
1. 인라인 스타일 조작
  $elementNode.style

2. 클래스 조작
  $elementNode.className  > 문자열로 돼 있음

  $elementNode.classList	> 유사배열
	메서드명			 설명
	add(...className)	 	인수로 전달한 클래스를 추가
	remove(...className)	인수로 전달한 클래스를 제거

	item(index) 		index번째 해당하는 클래스를 반환

	contains(className)	인수로 전달한 클래스명과 일치하는
				  클래스 속성이 있는지 확인

	replace(old, new) 		첫번째 인수로 전달한 클래스를
				  두 번째 인수로 전달한 클래스로 교체

	toggle(className) 		인수로 전달한 클래스명이 속성으로
				  이미 존재하면 삭제하고 
				  존재하지 않으면 추가함


# 이벤트
 이벤트: 브라우저가 클릭, 마우스 이동, 키보드 입력 등이 일어나는 것을 감지하는 것
 이벤트 핸들러: 이벤트가 일어났을 때 호출할 함수
 등록: 이벤트 핸들러를 등록


1. 이벤트 핸들러 - 어트리뷰트 방식
<button onclick=”함수호출문()”>


2. 이벤트 핸들러 - 프로퍼티 방식
$element.onclick = function () {
이벤트 실행문;
}

$element.onclick = 함수 이름;

*$element.onclick = 함수 이름()  > 함수를 호출해 리턴한 값을 onclick에 할당(x)

제거.
$b3.onmouseleave = null


3. 이벤트 핸들러 - addEventListener

주의.
1. 문자열
2. on 떼기
3. ('이벤트타입', '이벤트 핸들러');
4. 익명함수도 가능